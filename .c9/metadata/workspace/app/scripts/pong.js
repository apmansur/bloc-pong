{"filter":false,"title":"pong.js","tooltip":"/app/scripts/pong.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":141,"column":29},"end":{"row":141,"column":30},"action":"remove","lines":[" "],"id":1339}],[{"start":{"row":141,"column":28},"end":{"row":141,"column":29},"action":"remove","lines":["1"],"id":1340}],[{"start":{"row":141,"column":28},"end":{"row":141,"column":29},"action":"insert","lines":[" "],"id":1341}],[{"start":{"row":141,"column":29},"end":{"row":141,"column":30},"action":"insert","lines":["1"],"id":1342}],[{"start":{"row":138,"column":31},"end":{"row":138,"column":32},"action":"insert","lines":[";"],"id":1343}],[{"start":{"row":141,"column":30},"end":{"row":141,"column":31},"action":"insert","lines":[";"],"id":1344}],[{"start":{"row":227,"column":2},"end":{"row":227,"column":3},"action":"insert","lines":[";"],"id":1345}],[{"start":{"row":226,"column":35},"end":{"row":226,"column":36},"action":"insert","lines":[";"],"id":1346}],[{"start":{"row":223,"column":13},"end":{"row":223,"column":14},"action":"insert","lines":[";"],"id":1347}],[{"start":{"row":230,"column":35},"end":{"row":230,"column":36},"action":"insert","lines":[";"],"id":1348}],[{"start":{"row":219,"column":1},"end":{"row":219,"column":2},"action":"insert","lines":[";"],"id":1349}],[{"start":{"row":218,"column":18},"end":{"row":218,"column":19},"action":"insert","lines":[";"],"id":1350}],[{"start":{"row":217,"column":31},"end":{"row":217,"column":32},"action":"insert","lines":[";"],"id":1351}],[{"start":{"row":216,"column":43},"end":{"row":216,"column":44},"action":"insert","lines":[";"],"id":1352}],[{"start":{"row":215,"column":43},"end":{"row":215,"column":44},"action":"insert","lines":[";"],"id":1353}],[{"start":{"row":214,"column":21},"end":{"row":214,"column":22},"action":"insert","lines":[";"],"id":1354}],[{"start":{"row":210,"column":30},"end":{"row":210,"column":31},"action":"insert","lines":[";"],"id":1355}],[{"start":{"row":209,"column":14},"end":{"row":209,"column":15},"action":"insert","lines":[";"],"id":1356}],[{"start":{"row":208,"column":27},"end":{"row":208,"column":28},"action":"insert","lines":[";"],"id":1357}],[{"start":{"row":211,"column":1},"end":{"row":211,"column":2},"action":"remove","lines":[";"],"id":1358}],[{"start":{"row":130,"column":18},"end":{"row":130,"column":19},"action":"insert","lines":[";"],"id":1359}],[{"start":{"row":129,"column":31},"end":{"row":129,"column":32},"action":"insert","lines":[";"],"id":1360}],[{"start":{"row":128,"column":23},"end":{"row":128,"column":24},"action":"insert","lines":[";"],"id":1361}],[{"start":{"row":127,"column":97},"end":{"row":127,"column":98},"action":"insert","lines":[";"],"id":1362}],[{"start":{"row":126,"column":21},"end":{"row":126,"column":22},"action":"insert","lines":[";"],"id":1363}],[{"start":{"row":131,"column":1},"end":{"row":131,"column":2},"action":"insert","lines":[";"],"id":1364}],[{"start":{"row":113,"column":27},"end":{"row":113,"column":28},"action":"insert","lines":[";"],"id":1365}],[{"start":{"row":114,"column":28},"end":{"row":114,"column":29},"action":"insert","lines":[";"],"id":1366}],[{"start":{"row":115,"column":18},"end":{"row":115,"column":19},"action":"insert","lines":[";"],"id":1367}],[{"start":{"row":116,"column":31},"end":{"row":116,"column":32},"action":"insert","lines":[";"],"id":1368}],[{"start":{"row":117,"column":37},"end":{"row":117,"column":38},"action":"insert","lines":[";"],"id":1369}],[{"start":{"row":118,"column":31},"end":{"row":118,"column":32},"action":"insert","lines":[";"],"id":1370}],[{"start":{"row":102,"column":28},"end":{"row":102,"column":29},"action":"insert","lines":[";"],"id":1371}],[{"start":{"row":104,"column":29},"end":{"row":104,"column":30},"action":"insert","lines":[";"],"id":1372}],[{"start":{"row":107,"column":1},"end":{"row":107,"column":2},"action":"insert","lines":[";"],"id":1373}],[{"start":{"row":96,"column":22},"end":{"row":96,"column":23},"action":"insert","lines":[";"],"id":1374}],[{"start":{"row":97,"column":1},"end":{"row":97,"column":2},"action":"insert","lines":[";"],"id":1375}],[{"start":{"row":92,"column":42},"end":{"row":92,"column":43},"action":"insert","lines":[";"],"id":1376}],[{"start":{"row":93,"column":1},"end":{"row":93,"column":2},"action":"remove","lines":[";"],"id":1377}],[{"start":{"row":87,"column":1},"end":{"row":87,"column":2},"action":"insert","lines":[";"],"id":1378}],[{"start":{"row":84,"column":29},"end":{"row":84,"column":30},"action":"insert","lines":[";"],"id":1379}],[{"start":{"row":82,"column":28},"end":{"row":82,"column":29},"action":"insert","lines":[";"],"id":1380}],[{"start":{"row":76,"column":1},"end":{"row":76,"column":2},"action":"insert","lines":[";"],"id":1381}],[{"start":{"row":75,"column":22},"end":{"row":75,"column":23},"action":"insert","lines":[";"],"id":1382}],[{"start":{"row":71,"column":23},"end":{"row":71,"column":24},"action":"insert","lines":[";"],"id":1383}],[{"start":{"row":72,"column":1},"end":{"row":72,"column":2},"action":"remove","lines":[";"],"id":1384}],[{"start":{"row":70,"column":58},"end":{"row":70,"column":59},"action":"insert","lines":[";"],"id":1385}],[{"start":{"row":65,"column":1},"end":{"row":65,"column":2},"action":"insert","lines":[";"],"id":1386}],[{"start":{"row":63,"column":18},"end":{"row":63,"column":19},"action":"insert","lines":[";"],"id":1387}],[{"start":{"row":62,"column":31},"end":{"row":62,"column":32},"action":"insert","lines":[";"],"id":1388}],[{"start":{"row":60,"column":18},"end":{"row":60,"column":19},"action":"insert","lines":[";"],"id":1389}],[{"start":{"row":59,"column":15},"end":{"row":59,"column":16},"action":"insert","lines":[";"],"id":1390}],[{"start":{"row":57,"column":16},"end":{"row":57,"column":17},"action":"insert","lines":[";"],"id":1391}],[{"start":{"row":56,"column":13},"end":{"row":56,"column":14},"action":"insert","lines":[";"],"id":1392}],[{"start":{"row":55,"column":13},"end":{"row":55,"column":14},"action":"insert","lines":[";"],"id":1393}],[{"start":{"row":52,"column":1},"end":{"row":52,"column":2},"action":"insert","lines":[";"],"id":1394}],[{"start":{"row":51,"column":59},"end":{"row":51,"column":60},"action":"insert","lines":[";"],"id":1395}],[{"start":{"row":50,"column":28},"end":{"row":50,"column":29},"action":"remove","lines":["'"],"id":1396},{"start":{"row":50,"column":28},"end":{"row":50,"column":29},"action":"insert","lines":[";"]}],[{"start":{"row":50,"column":28},"end":{"row":50,"column":29},"action":"remove","lines":[";"],"id":1397}],[{"start":{"row":50,"column":28},"end":{"row":50,"column":29},"action":"insert","lines":["'"],"id":1398}],[{"start":{"row":50,"column":29},"end":{"row":50,"column":30},"action":"insert","lines":[";"],"id":1399}],[{"start":{"row":47,"column":1},"end":{"row":47,"column":2},"action":"remove","lines":[";"],"id":1400}],[{"start":{"row":46,"column":16},"end":{"row":46,"column":17},"action":"insert","lines":[";"],"id":1401}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":[";"],"id":1402}],[{"start":{"row":44,"column":22},"end":{"row":44,"column":23},"action":"insert","lines":[";"],"id":1403}],[{"start":{"row":43,"column":20},"end":{"row":43,"column":21},"action":"insert","lines":[";"],"id":1404}],[{"start":{"row":42,"column":12},"end":{"row":42,"column":13},"action":"insert","lines":[";"],"id":1405}],[{"start":{"row":41,"column":12},"end":{"row":41,"column":13},"action":"insert","lines":[";"],"id":1406}],[{"start":{"row":36,"column":1},"end":{"row":36,"column":2},"action":"insert","lines":[";"],"id":1407}],[{"start":{"row":35,"column":15},"end":{"row":35,"column":16},"action":"insert","lines":[";"],"id":1408}],[{"start":{"row":34,"column":10},"end":{"row":34,"column":11},"action":"insert","lines":[";"],"id":1409}],[{"start":{"row":33,"column":10},"end":{"row":33,"column":11},"action":"insert","lines":[";"],"id":1410}],[{"start":{"row":30,"column":1},"end":{"row":30,"column":2},"action":"insert","lines":[";"],"id":1411}],[{"start":{"row":29,"column":15},"end":{"row":29,"column":16},"action":"insert","lines":[";"],"id":1412}],[{"start":{"row":28,"column":19},"end":{"row":28,"column":20},"action":"insert","lines":[";"],"id":1413}],[{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"insert","lines":[";"],"id":1414}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":[";"],"id":1415}],[{"start":{"row":22,"column":14},"end":{"row":22,"column":15},"action":"insert","lines":[";"],"id":1416}],[{"start":{"row":21,"column":19},"end":{"row":21,"column":20},"action":"insert","lines":[";"],"id":1417}],[{"start":{"row":20,"column":17},"end":{"row":20,"column":18},"action":"insert","lines":[";"],"id":1418}],[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":[";"],"id":1419}],[{"start":{"row":19,"column":39},"end":{"row":19,"column":40},"action":"insert","lines":[";"],"id":1420}],[{"start":{"row":15,"column":20},"end":{"row":15,"column":21},"action":"insert","lines":[";"],"id":1421}],[{"start":{"row":13,"column":21},"end":{"row":13,"column":22},"action":"insert","lines":[";"],"id":1422}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":[";"],"id":1423}],[{"start":{"row":24,"column":1},"end":{"row":24,"column":2},"action":"insert","lines":[";"],"id":1424}],[{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"insert","lines":[";"],"id":1425}],[{"start":{"row":10,"column":25},"end":{"row":10,"column":26},"action":"insert","lines":[";"],"id":1426}],[{"start":{"row":9,"column":37},"end":{"row":9,"column":38},"action":"insert","lines":[";"],"id":1427}],[{"start":{"row":8,"column":22},"end":{"row":8,"column":23},"action":"insert","lines":[";"],"id":1428}],[{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"insert","lines":[";"],"id":1429}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":[";"],"id":1430}],[{"start":{"row":5,"column":16},"end":{"row":5,"column":17},"action":"insert","lines":[";"],"id":1431}],[{"start":{"row":4,"column":50},"end":{"row":4,"column":51},"action":"insert","lines":[";"],"id":1432}],[{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":[";"],"id":1433}],[{"start":{"row":1,"column":40},"end":{"row":1,"column":41},"action":"insert","lines":[";"],"id":1434}],[{"start":{"row":0,"column":0},"end":{"row":232,"column":0},"action":"remove","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 0;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y < 50) {","    this.y = 50;","    this.speed = 0;","  } else if (this.y > (canvas.height - 50)) {","    this.y = canvas.height - 50;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 1;","  this.yspeed = 0;","}","","","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","Ball.prototype.update = function () {","  ","  //if paddle goes out of x bounds of canvas","  "," if(this.x + this.radius > canvas.width){","       player.paddle.score += 1;","     }","  else if (this.x - this.radius < 0) {","    computer.paddle.score += 1;","  } ","  ","  //if paddle goes out of y bounds for canvas","  else if(this.y + this.radius > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (this.y - this.radius < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","};","","if (this.x <= player.paddle.x + player.paddle.width/2) {","","    //in case of issues with the ball moving small px in a given frame","    var tolerance = 2;","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= player.paddle.x + player.paddle.width/2 ","            && this.y - this.radius >= player.paddle.y","            && this.y + this.radius <= player.paddle.y + player.paddle.height/2) {","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= player.paddle.y","            && this.y <= player.paddle.y","            && this.x - this.radius >= player.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = player.paddle.x + player.paddle.width/2;","        var py = player.paddle.y;","        if (this.y + this.radius > player.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += player.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 10;","  this.p2 = canvas.height - 10;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});",""],"id":1435},{"start":{"row":0,"column":0},"end":{"row":245,"column":3},"action":"insert","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 0;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 1;","  this.yspeed = 0;","}","","","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","","","if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","    //in case of issues with the ball moving small px in a given frame","    var tolerance = 2;","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}","};","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"]}],[{"start":{"row":0,"column":0},"end":{"row":245,"column":3},"action":"remove","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 0;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 1;","  this.yspeed = 0;","}","","","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","","","if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","    //in case of issues with the ball moving small px in a given frame","    var tolerance = 2;","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}","};","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"],"id":1436},{"start":{"row":0,"column":0},"end":{"row":267,"column":3},"action":"insert","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 2;","  this.yspeed = 1;","}","","","","Ball.prototype.render = function () {","  ","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       //ball.render(); get new ball","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    //ball.render();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/2)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/2)","    console.log(computer.paddle.speed)","    this.x += this.xspeed","  }","}","};","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","//in case of issues with the ball moving small px in a given frame","var tolerance = 2;","","","","/*if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}*/","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"]}],[{"start":{"row":0,"column":0},"end":{"row":267,"column":3},"action":"remove","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 2;","  this.yspeed = 1;","}","","","","Ball.prototype.render = function () {","  ","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       //ball.render(); get new ball","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    //ball.render();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/2)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/2)","    console.log(computer.paddle.speed)","    this.x += this.xspeed","  }","}","};","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","//in case of issues with the ball moving small px in a given frame","var tolerance = 2;","","","","/*if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}*/","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"],"id":1437},{"start":{"row":0,"column":0},"end":{"row":277,"column":3},"action":"insert","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 2;","  this.yspeed = 0;","}","","","","Ball.prototype.render = function () {","  ","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","Ball.prototype.reset = function (){","  this.xspeed = 2;","  this.yspeed = 0;","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  this.y += this.yspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       console.log(\"player\" + player.paddle.score);","       this.reset();","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    console.log(computer.paddle.score);","    this.reset();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/5)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/5)","    console.log(this.yspeed)","    this.x += this.xspeed","  }","}","};","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","//in case of issues with the ball moving small px in a given frame","var tolerance = 2;","","","","/*if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}*/","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"]}],[{"start":{"row":0,"column":0},"end":{"row":277,"column":3},"action":"remove","lines":["var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","","var pressedKeys = {};","","var render = function () {","  context.fillStyle = 'white';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'black';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 50, 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(0, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 15;","  this.startAngle = 1 * Math.PI;","  this.endAngle = 0.9999999 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 2;","  this.yspeed = 0;","}","","","","Ball.prototype.render = function () {","  ","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.lineWidth = 1;","  context.strokeStyle = 'black';","  context.stroke();","};","","Ball.prototype.reset = function (){","  this.xspeed = 2;","  this.yspeed = 0;","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","};","","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  this.y += this.yspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       console.log(\"player\" + player.paddle.score);","       this.reset();","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    console.log(computer.paddle.score);","    this.reset();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/5)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/5)","    console.log(this.yspeed)","    this.x += this.xspeed","  }","}","};","","","//collison","","var bottomCP = computer.paddle.y + computer.paddle.height/2;","var topCP = computer.paddle.y - computer.paddle.height/2;","var edgeCP = computer.paddle.x - computer.paddle.width/2;","","//in case of issues with the ball moving small px in a given frame","var tolerance = 2;","","","","/*if (this.x >= computer.paddle.x - computer.paddle.width/2) {","  ","","    // Detect if ball hits front of paddle","    // y collision should be from 1/2 the ball width above the paddle's edge","    // to 1/2 the ball width below the paddle's edge","    if (this.x + tolerance >= edgeCP && bottomBall <= bottomCP && topBall  >= topCP ){","      console.log(\"hit\");","        this.xspeed = -this.xspeed;","","  ","    } else if (this.y - this.radius >= computer.paddle.y","            && this.y <= computer.paddle.y","            && this.x - this.radius >= computer.paddle.x) {","","        // Get the position of the center of the ball","        var x = this.x + this.radius;","        var y = this.y + this.radius;","","        // Get the position of the corner of the paddle","        var px = computer.paddle.x + computer.paddle.width/2;","        var py = computer.paddle.y;","        if (this.y + this.radius > computer.paddle.y) {","            // if the ball is below the top edge, use the bottom corner","            // of the paddle - else use the top corner of the paddle","            py += computer.paddle.height/2;","        }","        ","","        // Do some trig to determine if the ball surface touched the paddle edge","        // Calc the distance (C = sqrt(A^2 + B^2))","        var dist = Math.pow(Math.pow(x - px, 2) + Math.pow(y - py, 2), 0.5);","","        // Check if the distance is within the padding zone","        if (dist <= this.radius && dist >= this.radius - tolerance) {","            // Get the angle of contact as Arc-sin of dx/dy","            var angle = Math.asin(x - px / y - py);","","            // Adjust the velocity accordingly","            this.vy = (-this.yspeed * Math.cos(angle)) + (-this.xspeed * Math.sin(angle));","            this.vx = (-this.xspeed * Math.cos(angle)) + (-this.yspeed * Math.sin(angle));","        }","","    }","}*/","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'black';","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"],"id":1438},{"start":{"row":0,"column":0},"end":{"row":237,"column":3},"action":"insert","lines":["//*** Global Variables ***","","var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","var pressedKeys = {};","","//*** Render Game ***","","var render = function () {","  context.fillStyle = 'black';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","  score();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","//*** Score ***","","var score =  function (){","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(player.paddle.score , 450, 50); ","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(computer.paddle.score , 550, 50);","};","","","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'white';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 30 , 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(5, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 20;","  this.startAngle = 0;","  this.endAngle = 2 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 3;","  this.yspeed = 0;","}","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.fillStyle = 'white';","  context.fill();","};","","Ball.prototype.reset = function (){","  this.xspeed = 3;","  this.yspeed = 0;","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","};","","","//*** Collison ***","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  this.y += this.yspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       console.log(\"player\" + player.paddle.score);","       this.reset();","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    console.log(computer.paddle.score);","    this.reset();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/5)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/5)","    console.log(this.yspeed)","    this.x += this.xspeed","  }","}","};","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'white';","  context.setLineDash([20, 10]);","  context.lineWidth= 5;","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"]}],[{"start":{"row":0,"column":0},"end":{"row":237,"column":3},"action":"remove","lines":["//*** Global Variables ***","","var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","var pressedKeys = {};","","//*** Render Game ***","","var render = function () {","  context.fillStyle = 'black';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","  score();","};","","var update = function () {","  player.update();","  computer.update();","  ball.update();","};","","var step = function () {","  update();","  render();","  animate(step);","};","","//*** Score ***","","var score =  function (){","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(player.paddle.score , 450, 50); ","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(computer.paddle.score , 550, 50);","};","","","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'white';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 30 , 50, 25, 100);","  this.twoPlayer = true;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","};","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(5, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 20;","  this.startAngle = 0;","  this.endAngle = 2 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 3;","  this.yspeed = 0;","}","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.fillStyle = 'white';","  context.fill();","};","","Ball.prototype.reset = function (){","  this.xspeed = 3;","  this.yspeed = 0;","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","};","","","//*** Collison ***","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  this.y += this.yspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       console.log(\"player\" + player.paddle.score);","       this.reset();","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    console.log(computer.paddle.score);","    this.reset();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/5)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/5)","    console.log(this.yspeed)","    this.x += this.xspeed","  }","}","};","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'white';","  context.setLineDash([20, 10]);","  context.lineWidth= 5;","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});"],"id":1439},{"start":{"row":0,"column":0},"end":{"row":311,"column":0},"action":"insert","lines":["//*** Global Variables ***","","var animate = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {","  window.setTimeout(callback, 1000 / 60);","};","var canvas = document.getElementById('pong-table');","var width = 1000;","var height = 500;","canvas.width = width;","canvas.height = height;","var context = canvas.getContext('2d');","var player = new Player();","var computer = new Computer();","var net = new Net();","var ball = new Ball();","var pressedKeys = {};","var difficulty = 0.1;","","var random = function(diff) {","  return diff * Math.random();","};","","var endMessage = function(winner){","  context.font = \"4em Verdana\";","   context.fillStyle = \"green\";","  context.textAlign = \"center\";","   context.fillText((winner + \"has won the game!\") , 500, 250); ","};","","var endGame = function(player, computer){","  if (player.paddle.score == 11 ){","    endMessage(\"Player 1\");","    step();","  }","   else if (computer.paddle.score == 1){","     if (computer.paddle.twoPlayer === false){","       endMessage(\"Computer\");","       step();","       console.log(\"hello\");","     }","     else{","       endMessage(\"Player 2\");","     }","  ","   }","};","","","","//*** Render Game ***","","var render = function () {","  context.fillStyle = 'black';","  context.fillRect(0, 0, width, height);","  player.render();","  computer.render();","  net.render();","  ball.render();","  score();","};","","var update = function () {","  endGame(player, computer);","  player.update();","  computer.update();","  ","  ball.update();","  ","};","","var step = function () {","  update();","  render();","  animate(step);","};","","//*** Score ***","","var score =  function (){","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(player.paddle.score , 450, 50); ","    context.font = \"2.5em Verdana\";","    context.fillStyle = \"white\";","    context.textAlign = \"center\";","    context.fillText(computer.paddle.score , 550, 50);","};","","","","// *** PADDLE ***","","function Paddle (x, y, width, height) {","  this.x = x;","  this.y = y;","  this.width = width;","  this.height = height;","  this.speed = 1;","  this.score = 0;","}","","Paddle.prototype.render = function () {","  context.fillStyle = 'white';","  context.fillRect(this.x, this.y, this.width, this.height);","};","","Paddle.prototype.move = function (x, y) {","  this.x += x;","  this.y += y;","  this.speed = y;","  if (this.y + this.height/2 < 50) {","    this.y = 50 - this.height/2;","    this.speed = 0;","  } else if (this.y + this.height/2 > (canvas.height - 50)) {","    this.y = canvas.height - 50 - this.height/2;","    this.speed = 0;","  }","};","","","// *** COMPUTER ***","","function Computer () {","  this.paddle = new Paddle(canvas.width - 30 , 50, 25, 100);","  this.twoPlayer = false;","}","","Computer.prototype.render = function () {","  this.paddle.render();","};","","Computer.prototype.update = function () {","  // TODO Implement computer paddle moving to track ball","","  if (computer.twoPlayer === false){","    // difference between ball x and the paddle x","    var diff = -(((this.paddle.y + (this.paddle.height/2))) - ball.y);","    if (diff < 0 && diff < -4) {","        diff = -5;","  ","    }","    else if (diff > 0 && diff > 4) {","        diff = 5;","    }","    this.paddle.move(0, random(diff));","    if ((this.paddle.y + this.paddle.height) > 500) {","        this.paddle.y = 400;","    }","    else if (this.paddle.y <0){","      this.paddle.y = 0;","    }","  }","  else {","  for (var key in pressedKeys) {","    if (key === '40') {","      this.paddle.move(0, 4);","    } else if (key === '38') {","      this.paddle.move(0, -4);","    }","  }","  }","};","","//computer AI","","// *** PLAYER ***","","function Player () {","  this.paddle = new Paddle(5, 50, 25, 100);","}","","Player.prototype.render = function () {","  this.paddle.render();","};","","Player.prototype.update = function () {","  for (var key in pressedKeys) {","    if (key === '83') {","      this.paddle.move(0, 4);","    } else if (key === '87') {","      this.paddle.move(0, -4);","    }","  }","};","","//pause the game with space key","function keyDown(space) {","  if (space.keycode == 19) pauseGame();","} ","","function pauseGame() {","  if (!gamePaused) {","    game = clearTimeout(game);","    gamePaused = true;","  } else if (gamePaused) {","    game = setTimeout(gameLoop, 1000 / 60);","    gamePaused = false;","  }","}","","","// *** BALL ***","","function Ball () {","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","  this.radius = 20;","  this.startAngle = 0;","  this.endAngle = 2 * Math.PI;","  this.counterClockwise = false;","  this.xspeed = 5;","  this.yspeed = 0;","}","","Ball.prototype.render = function () {","  context.beginPath();","  context.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.counterClockwise);","  context.fillStyle = 'white';","  context.fill();","};","","Ball.prototype.reset = function (){","  this.xspeed = 3;","  this.yspeed = 0;","  this.x = canvas.width / 2;","  this.y = canvas.height / 2;","};","","","//*** Collison ***","","Ball.prototype.update = function () {","  var leftBall = this.x - this.radius;","  var rightBall = this.x + this.radius;","  var topBall = this.y - this.radius;","  var bottomBall = this.y + this.radius;","  ","  this.x += this.xspeed;","  this.y += this.yspeed;","  ","  //if paddle goes out of x bounds of canvas"," if(rightBall > canvas.width){","       player.paddle.score += 1;","       this.reset();","       ","     }","  else if (leftBall < 0) {","    computer.paddle.score += 1;","    console.log(computer.paddle.score);","    this.reset();","  } ","  ","  //if paddle goes out of y bounds for canvas (ball top and bottom is reverse of canvas)","  else if(bottomBall > canvas.height){","     this.yspeed = (-this.yspeed);","     this.y = canvas.height-this.radius;","  }","","  else if (topBall < 0){","     this.yspeed = (-this.yspeed);","     this.y = this.radius;","  }","  ","  ","  if (leftBall < 500) {","  if (leftBall < (player.paddle.x + player.paddle.width) && rightBall > player.paddle.x && topBall < (player.paddle.y + player.paddle.height) && bottomBall > player.paddle.y) {","    this.xspeed = 3","    this.yspeed += (player.paddle.speed/4)","    this.x += this.xspeed","  }","} else {","  if (leftBall < (computer.paddle.x + computer.paddle.width) && rightBall > computer.paddle.x && topBall < (computer.paddle.y + computer.paddle.height) && bottomBall > computer.paddle.y) {","    this.xspeed = -3","    this.yspeed += (computer.paddle.speed/4)","    console.log(this.yspeed)","    this.x += this.xspeed","  }","}","};","","","// *** NET ***","","function Net () {","  this.x = canvas.width / 2;","  this.p1 = 0;","  this.p2 = canvas.height;","}","","Net.prototype.render = function () {","  context.beginPath();","  context.moveTo(canvas.width / 2, this.p1);","  context.lineTo(canvas.width / 2, this.p2);","  context.strokeStyle = 'white';","  context.setLineDash([20, 10]);","  context.lineWidth= 5;","  context.stroke();","};","","// *** ANIMATION ***","","animate(step);","","window.addEventListener('keydown', function (event) {","  pressedKeys[event.keyCode] = true;","});","","window.addEventListener('keyup', function (event) {","  delete pressedKeys[event.keyCode];","});",""]}]]},"ace":{"folds":[],"scrolltop":3963,"scrollleft":0,"selection":{"start":{"row":311,"column":0},"end":{"row":311,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":282,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1503540911153,"hash":"104a6e2439985fb0e2fc63783a81d2f9fcbd6c68"}